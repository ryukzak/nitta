name: nitta
version: 0.0.0.1
synopsis: Tool for Hard Real-Time CGRA Processors
description: |-
  Kind: research pet project.

  Project status: early prototype.

  We develop the tool for generating and programming specialized non-von Neumann CGRA processors used for cyclic execution of control and signal/data processing algorithms. These processors are based on the original Not Instruction Transport Triggered Architecture (NITTA). That allows us to:

  - Provide high speed and parallel execution of irregular algorithms (where GPU is not applicable) in hard real-time (clock accuracy).
  - Make the processor reconfigurable for different application domains.
  - Provide a high-level language for application developers and fast compilation.

  Our future users can resolve the following tasks:

  - Development of embedded and cyber-physical systems.
  - Hardware and software testing and rapid prototyping (HIL and PIL).
  - Development of programmable accelerators and coprocessors.

  Page: <https://ryukzak.github.io/projects/nitta/>

category: "CGRA, ASIP, CAD, hardware"
author: Aleksandr Penskoi
maintainer: aleksandr.penskoi@gmail.com
copyright: 2021 Aleksandr Penskoi
license: BSD3
homepage: "https://ryukzak.github.io/projects/nitta/"
extra-doc-files:
  - README.md

ghc-options:
  - "-j"
  - "-Wall"
  - "-Werror"
  - "-Wcompat"
  - "-Wredundant-constraints"
  - "-fno-warn-missing-signatures"
  - "-optP-Wno-nonportable-include-path"

default-extensions:
  - DeriveDataTypeable
  - DeriveGeneric
  - ImportQualifiedPost
  - LambdaCase
  - NamedFieldPuns
  - ScopedTypeVariables
  - MultiParamTypeClasses
  - FlexibleContexts
  - FlexibleInstances
  - TupleSections
  - UndecidableInstances

dependencies:
  - MissingH
  - base
  - boxes
  - bytestring
  - containers
  - heap
  - data-default
  - filepath
  - ginger
  - yaml
  - intervals
  - mtl
  - prettyprinter
  - process-extras
  - regex-compat
  - string-interpolate
  - text
  - unordered-containers
  - tostring
  - wai-app-static

library:
  source-dirs: src
  dependencies:
    - HStringTemplate
    - aeson
    - aeson-pretty
    - array
    - cassava
    - directory
    - file-embed
    - hashable
    - hslogger
    - http-api-data
    - language-lua
    - network-simple
    - process
    - safe
    - servant
    - servant-docs
    - servant-js
    - servant-server
    - split
    - stm
    - transformers
    - utility-ht
    - validity
    - wai-cors
    - warp
    - hxt
    - parsec
    - http-conduit

executables:
  nitta:
    main: Main
    other-modules:
      - Paths_nitta
    source-dirs: app
    ghc-options:
      - "-threaded"
      - "-rtsopts"
      - "-with-rtsopts=-N"
    dependencies:
      - cmdargs
      - hslogger
      - nitta

  nitta-api-gen:
    main: APIGen
    source-dirs: app
    other-modules:
      - Paths_nitta
    ghc-options:
      - "-threaded"
      - "-rtsopts"
      - "-with-rtsopts=-N"
    dependencies:
      - aeson
      - aeson-typescript
      - cmdargs
      - directory
      - hslogger
      - nitta

tests:
  nitta-test:
    main: Spec
    source-dirs: test
    ghc-options:
      - "-threaded"
      - "-rtsopts"
      - "-with-rtsopts=-N"
      - "-j"
    dependencies:
      - QuickCheck
      - atomic-primops
      - call-stack
      - directory
      - file-embed
      - genvalidity
      - genvalidity-property
      - language-lua
      - nitta
      - split
      - stm
      - tasty
      - tasty-expected-failure
      - tasty-hunit
      - tasty-quickcheck
      - tasty-rerun
      - tasty-th
      - hxt
